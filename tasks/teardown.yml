---
- name: Collect facts on running nodes
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Instance": "{{ ec2_name_prefix }}"
  register: all_running_nodes

- name: DEBUG - all_running_nodes
  debug:
    var: all_running_nodes
    verbosity: 2

- name: Terminate running EC2 instances
  amazon.aws.ec2_instance:
    region: "{{ ec2_region }}"
    state: absent
    instance_ids: "{{ all_running_nodes.instances | map(attribute='instance_id') | list }}"
    instance_type: "{{ ec2_instance_type }}"
  register: terminate_result
  when: all_running_nodes.instances

- name: DEBUG - terminate_result
  debug:
    var: terminate_result
    verbosity: 2

- name: Collect VPC ID for {{ ec2_name_prefix }}
  amazon.aws.ec2_vpc_net_info:
    filters:
      "tag:Instance": "{{ ec2_name_prefix }}"
    region: "{{ ec2_region }}"
  register: vpc_net_facts

- name: DEBUG - vpc_net_facts
  debug:
    var: vpc_net_facts
    verbosity: 2

- name: Simplify variables with set_fact
  set_fact:
    ec2_vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"
    ec2_security_group: "{{ ec2_name_prefix }}-sg"
  when: vpc_net_facts.vpcs | length > 0 and ec2_security_group is undefined

- name: Remove security group {{ ec2_security_group }}
  amazon.aws.ec2_group:
    name: "{{ ec2_security_group }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    state: absent
  register: remove_sg
  until: remove_sg is not failed
  retries: 50
  when: vpc_net_facts.vpcs | length > 0

- name: Remove subnet for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_subnet:
    region: "{{ ec2_region }}"
    az: "{{ ec2_az }}"
    vpc_id: "{{ ec2_vpc_id }}"
    cidr: "{{ ec2_subnet }}"
    state: absent
  register: remove_sg
  until: remove_sg is not failed
  retries: 50
  when: vpc_net_facts.vpcs | length > 0

- name: Remove internet gateway for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_igw:
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    state: absent
  when: vpc_net_facts.vpcs | length > 0

- name: Collect route table facts
  amazon.aws.ec2_vpc_route_table_info:
    region: "{{ ec2_region }}"
    filters:
      "tag:Name": "{{ ec2_name_prefix }}-rt"
  register: route_table_facts
  when: vpc_net_facts.vpcs | length > 0

- name: Remove route table for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_route_table:
    region: "{{ ec2_region }}"
    vpc_id: "{{ ec2_vpc_id }}"
    route_table_id: "{{ item.id }}"
    lookup: id
    state: absent
  with_items: "{{ route_table_facts.route_tables }}"
  when: vpc_net_facts.vpcs | length > 0 and item.associations == []

- name: Remove AWS VPC {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_net:
    name: "{{ ec2_name_prefix }}-vpc"
    cidr_block: "{{ ec2_subnet }}"
    region: "{{ ec2_region }}"
    state: absent

- name: Delete SSH Keypair
  amazon.aws.ec2_key:
    name: "{{ ec2_name_prefix }}-key"
    region: "{{ ec2_region }}"
    state: absent
