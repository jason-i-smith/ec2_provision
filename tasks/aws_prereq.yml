---
- name: Create AWS VPC - {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_net:
    name: "{{ ec2_name_prefix }}-vpc"
    cidr_block: "{{ ec2_subnet }}"
    region: "{{ ec2_region }}"
    tags:
      Instance: "{{ ec2_name_prefix }}"
      email: "{{ ec2_admin_email }}"
      Info: "Provisioned by Ansible"
  register: create_vpc
  when: ec2_vpc_id is undefined
  until: create_vpc is not failed
  retries: 5

- name: DEBUG - create_vpc
  debug:
    var: create_vpc
    verbosity: 2

- name: Create security group for {{ ec2_name_prefix }}-vpc 
  amazon.aws.ec2_group:
    name: "{{ ec2_name_prefix }}-sg"
    description: "ingress:ssh - egress:all"
    region: "{{ ec2_region }}"
    vpc_id: "{{ create_vpc.vpc.id }}"
    tags:
      Instance: "{{ ec2_name_prefix }}"
      Info: "Provisioned by Ansible"
    rules:
      - proto: tcp
        to_port: 22
        from_port: 22
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  when: ec2_vpc_id is undefined
  register: create_sg
  until: create_sg is not failed
  retries: 5

- name: DEBUG - create_sg
  debug:
    var: create_sg
    verbosity: 2

- name: Create subnet for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_subnet:
    region: "{{ ec2_region }}"
    az: "{{ ec2_az }}"
    vpc_id: "{{ create_vpc.vpc.id }}"
    cidr: "{{ ec2_subnet }}"
    map_public: yes
    wait_timeout: 600
    resource_tags:
      Name: "{{ ec2_name_prefix }}-subnet"
      Instance: "{{ ec2_name_prefix }}"
      Info: "Provisioned by Ansible"
  register: create_subnet
  when: ec2_vpc_id is undefined
  until: create_subnet is not failed
  retries: 15

- name: DEBUG - create_subnet
  debug:
    var: create_subnet
    verbosity: 2

- name: Create internet gateway for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_igw:
    region: "{{ ec2_region }}"
    vpc_id: "{{ create_vpc.vpc.id }}"
    tags:
      Name: "{{ ec2_name_prefix }}-igw"
      Instance: "{{ ec2_name_prefix }}"
      Info: "Provisioned by Ansible"
  register: igw
  until: igw is not failed
  retries: 15
  when: ec2_vpc_id is undefined

- name: DEBUG - igw
  debug:
    var: igw
    verbosity: 2

- name: Add public subnet route table for {{ ec2_name_prefix }}-vpc
  amazon.aws.ec2_vpc_route_table:
    region: "{{ ec2_region }}"
    vpc_id: "{{ create_vpc.vpc.id }}"
    subnets:
      - "{{ create_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
    tags:
      Name: "{{ ec2_name_prefix }}-rt"
      Instance: "{{ ec2_name_prefix }}"
      Info: "Provisioned by Ansible"
  register: routetable
  until: routetable is not failed
  retries: 5
  when: ec2_vpc_id is undefined

- name: DEBUG - routetable
  debug:
    var: routetable
    verbosity: 2

- name: Set variables for instance creation since VPC was created by Ansible
  set_fact:
    ec2_vpc_id: "{{ create_vpc.vpc.id }}"
    ec2_security_group: "{{ ec2_name_prefix }}-insecure_all"
    ec2_security_group_id: "{{ create_sg.group_id }}"
    ec2_vpc_subnet_id: "{{ create_subnet.subnet.id }}"
  when: ec2_vpc_id is undefined

- name: Create ssh key pair for instance {{ ec2_name_prefix }}
  amazon.aws.ec2_key:
    name: "{{ ec2_name_prefix }}-key"
    key_material: "{{ my_pub_key }}"
    region: "{{ ec2_region }}"
    force: true
  register: create_key

- name: Summary
  debug:
    msg:
      - "ec2_name_prefix: {{ ec2_name_prefix }}"
      - "ec2_vpc_id: {{ ec2_vpc_id }}"
      - "{{ ec2_name_prefix }}-key - {{ my_pub_key }}"
      - "ec2_security_group: {{ ec2_security_group }}"
      - "ec2_security_group_id: {{ ec2_security_group_id }}"
      - "ec2_vpc_subnet_id: {{ ec2_vpc_subnet_id }}"
